// Code generated - DO NOT EDIT.
// This file is a generated binding and any manual changes will be lost.

package user_management

import (
	"math/big"
	"strings"

	"github.com/FISCO-BCOS/go-sdk/abi"
	"github.com/FISCO-BCOS/go-sdk/abi/bind"
	"github.com/FISCO-BCOS/go-sdk/core/types"
	"github.com/FISCO-BCOS/go-sdk/event"
	ethereum "github.com/ethereum/go-ethereum"
	"github.com/ethereum/go-ethereum/common"
)

// Reference imports to suppress errors if they are not otherwise used.
var (
	_ = big.NewInt
	_ = strings.NewReader
	_ = ethereum.NotFound
	_ = abi.U256
	_ = bind.Bind
	_ = common.Big1
	_ = types.BloomLookup
	_ = event.NewSubscription
)

// Struct0 is an auto generated low-level Go binding around an user-defined struct.
type Struct0 struct {
	Id              string
	PubKey          string
	Name            string
	PasswordEncoded string
	Balance         *big.Int
}

// UserManagementABI is the input ABI used to generate the binding from.
const UserManagementABI = "[{\"constant\":false,\"inputs\":[{\"name\":\"id\",\"type\":\"string\"},{\"name\":\"pubKey\",\"type\":\"string\"},{\"name\":\"name\",\"type\":\"string\"},{\"name\":\"passwordEncoded\",\"type\":\"string\"}],\"name\":\"addUser\",\"outputs\":[{\"name\":\"\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"name\":\"id\",\"type\":\"string\"}],\"name\":\"isUserValidByID\",\"outputs\":[{\"name\":\"\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"name\":\"pubKey\",\"type\":\"string\"}],\"name\":\"getUserByPubKey\",\"outputs\":[{\"components\":[{\"name\":\"id\",\"type\":\"string\"},{\"name\":\"pubKey\",\"type\":\"string\"},{\"name\":\"name\",\"type\":\"string\"},{\"name\":\"passwordEncoded\",\"type\":\"string\"},{\"name\":\"balance\",\"type\":\"uint256\"}],\"name\":\"\",\"type\":\"tuple\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"id\",\"type\":\"string\"},{\"name\":\"targetPasswordEncoded\",\"type\":\"string\"}],\"name\":\"changePasswordEncoded\",\"outputs\":[{\"name\":\"\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"name\":\"id\",\"type\":\"string\"}],\"name\":\"getBalanceByID\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"from\",\"type\":\"string\"},{\"name\":\"to\",\"type\":\"string\"},{\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"transfer\",\"outputs\":[{\"name\":\"\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"name\":\"pubKey\",\"type\":\"string\"}],\"name\":\"getIDByPubKey\",\"outputs\":[{\"name\":\"\",\"type\":\"string\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"name\":\"pubKey\",\"type\":\"string\"}],\"name\":\"getBalanceByPubKey\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"name\":\"id\",\"type\":\"string\"}],\"name\":\"getPubKeyByID\",\"outputs\":[{\"name\":\"\",\"type\":\"string\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"id\",\"type\":\"string\"}],\"name\":\"deleteUser\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"name\":\"id\",\"type\":\"string\"}],\"name\":\"getUserByID\",\"outputs\":[{\"components\":[{\"name\":\"id\",\"type\":\"string\"},{\"name\":\"pubKey\",\"type\":\"string\"},{\"name\":\"name\",\"type\":\"string\"},{\"name\":\"passwordEncoded\",\"type\":\"string\"},{\"name\":\"balance\",\"type\":\"uint256\"}],\"name\":\"\",\"type\":\"tuple\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"getAllUsers\",\"outputs\":[{\"components\":[{\"name\":\"id\",\"type\":\"string\"},{\"name\":\"pubKey\",\"type\":\"string\"},{\"name\":\"name\",\"type\":\"string\"},{\"name\":\"passwordEncoded\",\"type\":\"string\"},{\"name\":\"balance\",\"type\":\"uint256\"}],\"name\":\"\",\"type\":\"tuple[]\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"admin\",\"outputs\":[{\"name\":\"\",\"type\":\"address\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"name\":\"pubKey\",\"type\":\"string\"}],\"name\":\"isUserValidByPubKey\",\"outputs\":[{\"name\":\"\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"name\":\"from\",\"type\":\"string\"},{\"indexed\":false,\"name\":\"to\",\"type\":\"string\"},{\"indexed\":false,\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"}]"

// UserManagementBin is the compiled bytecode used for deploying new user_management.
var UserManagementBin = ""

// DeployUserManagement deploys a new contract, binding an instance of UserManagement to it.
func DeployUserManagement(auth *bind.TransactOpts, backend bind.ContractBackend) (common.Address, *types.Transaction, *UserManagement, error) {
	parsed, err := abi.JSON(strings.NewReader(UserManagementABI))
	if err != nil {
		return common.Address{}, nil, nil, err
	}

	address, tx, contract, err := bind.DeployContract(auth, parsed, common.FromHex(UserManagementBin), backend)
	if err != nil {
		return common.Address{}, nil, nil, err
	}
	return address, tx, &UserManagement{UserManagementCaller: UserManagementCaller{contract: contract}, UserManagementTransactor: UserManagementTransactor{contract: contract}, UserManagementFilterer: UserManagementFilterer{contract: contract}}, nil
}

func AsyncDeployUserManagement(auth *bind.TransactOpts, handler func(*types.Receipt, error), backend bind.ContractBackend) (*types.Transaction, error) {
	parsed, err := abi.JSON(strings.NewReader(UserManagementABI))
	if err != nil {
		return nil, err
	}

	tx, err := bind.AsyncDeployContract(auth, handler, parsed, common.FromHex(UserManagementBin), backend)
	if err != nil {
		return nil, err
	}
	return tx, nil
}

// UserManagement is an auto generated Go binding around a Solidity contract.
type UserManagement struct {
	UserManagementCaller     // Read-only binding to the contract
	UserManagementTransactor // Write-only binding to the contract
	UserManagementFilterer   // Log filterer for contract events
}

// UserManagementCaller is an auto generated read-only Go binding around a Solidity contract.
type UserManagementCaller struct {
	contract *bind.BoundContract // Generic contract wrapper for the low level calls
}

// UserManagementTransactor is an auto generated write-only Go binding around a Solidity contract.
type UserManagementTransactor struct {
	contract *bind.BoundContract // Generic contract wrapper for the low level calls
}

// UserManagementFilterer is an auto generated log filtering Go binding around a Solidity contract events.
type UserManagementFilterer struct {
	contract *bind.BoundContract // Generic contract wrapper for the low level calls
}

// UserManagementSession is an auto generated Go binding around a Solidity contract,
// with pre-set call and transact options.
type UserManagementSession struct {
	Contract     *UserManagement   // Generic contract binding to set the session for
	CallOpts     bind.CallOpts     // Call options to use throughout this session
	TransactOpts bind.TransactOpts // Transaction auth options to use throughout this session
}

// UserManagementCallerSession is an auto generated read-only Go binding around a Solidity contract,
// with pre-set call options.
type UserManagementCallerSession struct {
	Contract *UserManagementCaller // Generic contract caller binding to set the session for
	CallOpts bind.CallOpts         // Call options to use throughout this session
}

// UserManagementTransactorSession is an auto generated write-only Go binding around a Solidity contract,
// with pre-set transact options.
type UserManagementTransactorSession struct {
	Contract     *UserManagementTransactor // Generic contract transactor binding to set the session for
	TransactOpts bind.TransactOpts         // Transaction auth options to use throughout this session
}

// UserManagementRaw is an auto generated low-level Go binding around a Solidity contract.
type UserManagementRaw struct {
	Contract *UserManagement // Generic contract binding to access the raw methods on
}

// UserManagementCallerRaw is an auto generated low-level read-only Go binding around a Solidity contract.
type UserManagementCallerRaw struct {
	Contract *UserManagementCaller // Generic read-only contract binding to access the raw methods on
}

// UserManagementTransactorRaw is an auto generated low-level write-only Go binding around a Solidity contract.
type UserManagementTransactorRaw struct {
	Contract *UserManagementTransactor // Generic write-only contract binding to access the raw methods on
}

// NewUserManagement creates a new instance of UserManagement, bound to a specific deployed contract.
func NewUserManagement(address common.Address, backend bind.ContractBackend) (*UserManagement, error) {
	contract, err := bindUserManagement(address, backend, backend, backend)
	if err != nil {
		return nil, err
	}
	return &UserManagement{UserManagementCaller: UserManagementCaller{contract: contract}, UserManagementTransactor: UserManagementTransactor{contract: contract}, UserManagementFilterer: UserManagementFilterer{contract: contract}}, nil
}

// NewUserManagementCaller creates a new read-only instance of UserManagement, bound to a specific deployed contract.
func NewUserManagementCaller(address common.Address, caller bind.ContractCaller) (*UserManagementCaller, error) {
	contract, err := bindUserManagement(address, caller, nil, nil)
	if err != nil {
		return nil, err
	}
	return &UserManagementCaller{contract: contract}, nil
}

// NewUserManagementTransactor creates a new write-only instance of UserManagement, bound to a specific deployed contract.
func NewUserManagementTransactor(address common.Address, transactor bind.ContractTransactor) (*UserManagementTransactor, error) {
	contract, err := bindUserManagement(address, nil, transactor, nil)
	if err != nil {
		return nil, err
	}
	return &UserManagementTransactor{contract: contract}, nil
}

// NewUserManagementFilterer creates a new log filterer instance of UserManagement, bound to a specific deployed contract.
func NewUserManagementFilterer(address common.Address, filterer bind.ContractFilterer) (*UserManagementFilterer, error) {
	contract, err := bindUserManagement(address, nil, nil, filterer)
	if err != nil {
		return nil, err
	}
	return &UserManagementFilterer{contract: contract}, nil
}

// bindUserManagement binds a generic wrapper to an already deployed contract.
func bindUserManagement(address common.Address, caller bind.ContractCaller, transactor bind.ContractTransactor, filterer bind.ContractFilterer) (*bind.BoundContract, error) {
	parsed, err := abi.JSON(strings.NewReader(UserManagementABI))
	if err != nil {
		return nil, err
	}
	return bind.NewBoundContract(address, parsed, caller, transactor, filterer), nil
}

// Call invokes the (constant) contract method with params as input values and
// sets the output to result. The result type might be a single field for simple
// returns, a slice of interfaces for anonymous returns and a struct for named
// returns.
func (_UserManagement *UserManagementRaw) Call(opts *bind.CallOpts, result interface{}, method string, params ...interface{}) error {
	return _UserManagement.Contract.UserManagementCaller.contract.Call(opts, result, method, params...)
}

// Transfer initiates a plain transaction to move funds to the contract, calling
// its default method if one is available.
func (_UserManagement *UserManagementRaw) Transfer(opts *bind.TransactOpts) (*types.Transaction, *types.Receipt, error) {
	return _UserManagement.Contract.UserManagementTransactor.contract.Transfer(opts)
}

// Transact invokes the (paid) contract method with params as input values.
func (_UserManagement *UserManagementRaw) Transact(opts *bind.TransactOpts, method string, params ...interface{}) (*types.Transaction, *types.Receipt, error) {
	return _UserManagement.Contract.UserManagementTransactor.contract.Transact(opts, method, params...)
}

// Call invokes the (constant) contract method with params as input values and
// sets the output to result. The result type might be a single field for simple
// returns, a slice of interfaces for anonymous returns and a struct for named
// returns.
func (_UserManagement *UserManagementCallerRaw) Call(opts *bind.CallOpts, result interface{}, method string, params ...interface{}) error {
	return _UserManagement.Contract.contract.Call(opts, result, method, params...)
}

// Transfer initiates a plain transaction to move funds to the contract, calling
// its default method if one is available.
func (_UserManagement *UserManagementTransactorRaw) Transfer(opts *bind.TransactOpts) (*types.Transaction, *types.Receipt, error) {
	return _UserManagement.Contract.contract.Transfer(opts)
}

// Transact invokes the (paid) contract method with params as input values.
func (_UserManagement *UserManagementTransactorRaw) Transact(opts *bind.TransactOpts, method string, params ...interface{}) (*types.Transaction, *types.Receipt, error) {
	return _UserManagement.Contract.contract.Transact(opts, method, params...)
}

// Admin is a free data retrieval call binding the contract method 0xf851a440.
//
// Solidity: function admin() constant returns(address)
func (_UserManagement *UserManagementCaller) Admin(opts *bind.CallOpts) (common.Address, error) {
	var (
		ret0 = new(common.Address)
	)
	out := ret0
	err := _UserManagement.contract.Call(opts, out, "admin")
	return *ret0, err
}

// Admin is a free data retrieval call binding the contract method 0xf851a440.
//
// Solidity: function admin() constant returns(address)
func (_UserManagement *UserManagementSession) Admin() (common.Address, error) {
	return _UserManagement.Contract.Admin(&_UserManagement.CallOpts)
}

// Admin is a free data retrieval call binding the contract method 0xf851a440.
//
// Solidity: function admin() constant returns(address)
func (_UserManagement *UserManagementCallerSession) Admin() (common.Address, error) {
	return _UserManagement.Contract.Admin(&_UserManagement.CallOpts)
}

// GetAllUsers is a free data retrieval call binding the contract method 0xe2842d79.
//
// Solidity: function getAllUsers() constant returns([]Struct0)
func (_UserManagement *UserManagementCaller) GetAllUsers(opts *bind.CallOpts) ([]Struct0, error) {
	var (
		ret0 = new([]Struct0)
	)
	out := ret0
	err := _UserManagement.contract.Call(opts, out, "getAllUsers")
	return *ret0, err
}

// GetAllUsers is a free data retrieval call binding the contract method 0xe2842d79.
//
// Solidity: function getAllUsers() constant returns([]Struct0)
func (_UserManagement *UserManagementSession) GetAllUsers() ([]Struct0, error) {
	return _UserManagement.Contract.GetAllUsers(&_UserManagement.CallOpts)
}

// GetAllUsers is a free data retrieval call binding the contract method 0xe2842d79.
//
// Solidity: function getAllUsers() constant returns([]Struct0)
func (_UserManagement *UserManagementCallerSession) GetAllUsers() ([]Struct0, error) {
	return _UserManagement.Contract.GetAllUsers(&_UserManagement.CallOpts)
}

// GetBalanceByID is a free data retrieval call binding the contract method 0x89ff59cd.
//
// Solidity: function getBalanceByID(string id) constant returns(uint256)
func (_UserManagement *UserManagementCaller) GetBalanceByID(opts *bind.CallOpts, id string) (*big.Int, error) {
	var (
		ret0 = new(*big.Int)
	)
	out := ret0
	err := _UserManagement.contract.Call(opts, out, "getBalanceByID", id)
	return *ret0, err
}

// GetBalanceByID is a free data retrieval call binding the contract method 0x89ff59cd.
//
// Solidity: function getBalanceByID(string id) constant returns(uint256)
func (_UserManagement *UserManagementSession) GetBalanceByID(id string) (*big.Int, error) {
	return _UserManagement.Contract.GetBalanceByID(&_UserManagement.CallOpts, id)
}

// GetBalanceByID is a free data retrieval call binding the contract method 0x89ff59cd.
//
// Solidity: function getBalanceByID(string id) constant returns(uint256)
func (_UserManagement *UserManagementCallerSession) GetBalanceByID(id string) (*big.Int, error) {
	return _UserManagement.Contract.GetBalanceByID(&_UserManagement.CallOpts, id)
}

// GetBalanceByPubKey is a free data retrieval call binding the contract method 0xc63e786a.
//
// Solidity: function getBalanceByPubKey(string pubKey) constant returns(uint256)
func (_UserManagement *UserManagementCaller) GetBalanceByPubKey(opts *bind.CallOpts, pubKey string) (*big.Int, error) {
	var (
		ret0 = new(*big.Int)
	)
	out := ret0
	err := _UserManagement.contract.Call(opts, out, "getBalanceByPubKey", pubKey)
	return *ret0, err
}

// GetBalanceByPubKey is a free data retrieval call binding the contract method 0xc63e786a.
//
// Solidity: function getBalanceByPubKey(string pubKey) constant returns(uint256)
func (_UserManagement *UserManagementSession) GetBalanceByPubKey(pubKey string) (*big.Int, error) {
	return _UserManagement.Contract.GetBalanceByPubKey(&_UserManagement.CallOpts, pubKey)
}

// GetBalanceByPubKey is a free data retrieval call binding the contract method 0xc63e786a.
//
// Solidity: function getBalanceByPubKey(string pubKey) constant returns(uint256)
func (_UserManagement *UserManagementCallerSession) GetBalanceByPubKey(pubKey string) (*big.Int, error) {
	return _UserManagement.Contract.GetBalanceByPubKey(&_UserManagement.CallOpts, pubKey)
}

// GetIDByPubKey is a free data retrieval call binding the contract method 0xa051f3e8.
//
// Solidity: function getIDByPubKey(string pubKey) constant returns(string)
func (_UserManagement *UserManagementCaller) GetIDByPubKey(opts *bind.CallOpts, pubKey string) (string, error) {
	var (
		ret0 = new(string)
	)
	out := ret0
	err := _UserManagement.contract.Call(opts, out, "getIDByPubKey", pubKey)
	return *ret0, err
}

// GetIDByPubKey is a free data retrieval call binding the contract method 0xa051f3e8.
//
// Solidity: function getIDByPubKey(string pubKey) constant returns(string)
func (_UserManagement *UserManagementSession) GetIDByPubKey(pubKey string) (string, error) {
	return _UserManagement.Contract.GetIDByPubKey(&_UserManagement.CallOpts, pubKey)
}

// GetIDByPubKey is a free data retrieval call binding the contract method 0xa051f3e8.
//
// Solidity: function getIDByPubKey(string pubKey) constant returns(string)
func (_UserManagement *UserManagementCallerSession) GetIDByPubKey(pubKey string) (string, error) {
	return _UserManagement.Contract.GetIDByPubKey(&_UserManagement.CallOpts, pubKey)
}

// GetPubKeyByID is a free data retrieval call binding the contract method 0xcb1d22ae.
//
// Solidity: function getPubKeyByID(string id) constant returns(string)
func (_UserManagement *UserManagementCaller) GetPubKeyByID(opts *bind.CallOpts, id string) (string, error) {
	var (
		ret0 = new(string)
	)
	out := ret0
	err := _UserManagement.contract.Call(opts, out, "getPubKeyByID", id)
	return *ret0, err
}

// GetPubKeyByID is a free data retrieval call binding the contract method 0xcb1d22ae.
//
// Solidity: function getPubKeyByID(string id) constant returns(string)
func (_UserManagement *UserManagementSession) GetPubKeyByID(id string) (string, error) {
	return _UserManagement.Contract.GetPubKeyByID(&_UserManagement.CallOpts, id)
}

// GetPubKeyByID is a free data retrieval call binding the contract method 0xcb1d22ae.
//
// Solidity: function getPubKeyByID(string id) constant returns(string)
func (_UserManagement *UserManagementCallerSession) GetPubKeyByID(id string) (string, error) {
	return _UserManagement.Contract.GetPubKeyByID(&_UserManagement.CallOpts, id)
}

// GetUserByID is a free data retrieval call binding the contract method 0xd460a5ff.
//
// Solidity: function getUserByID(string id) constant returns(Struct0)
func (_UserManagement *UserManagementCaller) GetUserByID(opts *bind.CallOpts, id string) (Struct0, error) {
	var (
		ret0 = new(Struct0)
	)
	out := ret0
	err := _UserManagement.contract.Call(opts, out, "getUserByID", id)
	return *ret0, err
}

// GetUserByID is a free data retrieval call binding the contract method 0xd460a5ff.
//
// Solidity: function getUserByID(string id) constant returns(Struct0)
func (_UserManagement *UserManagementSession) GetUserByID(id string) (Struct0, error) {
	return _UserManagement.Contract.GetUserByID(&_UserManagement.CallOpts, id)
}

// GetUserByID is a free data retrieval call binding the contract method 0xd460a5ff.
//
// Solidity: function getUserByID(string id) constant returns(Struct0)
func (_UserManagement *UserManagementCallerSession) GetUserByID(id string) (Struct0, error) {
	return _UserManagement.Contract.GetUserByID(&_UserManagement.CallOpts, id)
}

// GetUserByPubKey is a free data retrieval call binding the contract method 0x634c49cd.
//
// Solidity: function getUserByPubKey(string pubKey) constant returns(Struct0)
func (_UserManagement *UserManagementCaller) GetUserByPubKey(opts *bind.CallOpts, pubKey string) (Struct0, error) {
	var (
		ret0 = new(Struct0)
	)
	out := ret0
	err := _UserManagement.contract.Call(opts, out, "getUserByPubKey", pubKey)
	return *ret0, err
}

// GetUserByPubKey is a free data retrieval call binding the contract method 0x634c49cd.
//
// Solidity: function getUserByPubKey(string pubKey) constant returns(Struct0)
func (_UserManagement *UserManagementSession) GetUserByPubKey(pubKey string) (Struct0, error) {
	return _UserManagement.Contract.GetUserByPubKey(&_UserManagement.CallOpts, pubKey)
}

// GetUserByPubKey is a free data retrieval call binding the contract method 0x634c49cd.
//
// Solidity: function getUserByPubKey(string pubKey) constant returns(Struct0)
func (_UserManagement *UserManagementCallerSession) GetUserByPubKey(pubKey string) (Struct0, error) {
	return _UserManagement.Contract.GetUserByPubKey(&_UserManagement.CallOpts, pubKey)
}

// IsUserValidByID is a free data retrieval call binding the contract method 0x11627d7f.
//
// Solidity: function isUserValidByID(string id) constant returns(bool)
func (_UserManagement *UserManagementCaller) IsUserValidByID(opts *bind.CallOpts, id string) (bool, error) {
	var (
		ret0 = new(bool)
	)
	out := ret0
	err := _UserManagement.contract.Call(opts, out, "isUserValidByID", id)
	return *ret0, err
}

// IsUserValidByID is a free data retrieval call binding the contract method 0x11627d7f.
//
// Solidity: function isUserValidByID(string id) constant returns(bool)
func (_UserManagement *UserManagementSession) IsUserValidByID(id string) (bool, error) {
	return _UserManagement.Contract.IsUserValidByID(&_UserManagement.CallOpts, id)
}

// IsUserValidByID is a free data retrieval call binding the contract method 0x11627d7f.
//
// Solidity: function isUserValidByID(string id) constant returns(bool)
func (_UserManagement *UserManagementCallerSession) IsUserValidByID(id string) (bool, error) {
	return _UserManagement.Contract.IsUserValidByID(&_UserManagement.CallOpts, id)
}

// IsUserValidByPubKey is a free data retrieval call binding the contract method 0xf9bee445.
//
// Solidity: function isUserValidByPubKey(string pubKey) constant returns(bool)
func (_UserManagement *UserManagementCaller) IsUserValidByPubKey(opts *bind.CallOpts, pubKey string) (bool, error) {
	var (
		ret0 = new(bool)
	)
	out := ret0
	err := _UserManagement.contract.Call(opts, out, "isUserValidByPubKey", pubKey)
	return *ret0, err
}

// IsUserValidByPubKey is a free data retrieval call binding the contract method 0xf9bee445.
//
// Solidity: function isUserValidByPubKey(string pubKey) constant returns(bool)
func (_UserManagement *UserManagementSession) IsUserValidByPubKey(pubKey string) (bool, error) {
	return _UserManagement.Contract.IsUserValidByPubKey(&_UserManagement.CallOpts, pubKey)
}

// IsUserValidByPubKey is a free data retrieval call binding the contract method 0xf9bee445.
//
// Solidity: function isUserValidByPubKey(string pubKey) constant returns(bool)
func (_UserManagement *UserManagementCallerSession) IsUserValidByPubKey(pubKey string) (bool, error) {
	return _UserManagement.Contract.IsUserValidByPubKey(&_UserManagement.CallOpts, pubKey)
}

// AddUser is a paid mutator transaction binding the contract method 0x01cda3ac.
//
// Solidity: function addUser(string id, string pubKey, string name, string passwordEncoded) returns(bool)
func (_UserManagement *UserManagementTransactor) AddUser(opts *bind.TransactOpts, id string, pubKey string, name string, passwordEncoded string) (*types.Transaction, *types.Receipt, error) {
	return _UserManagement.contract.Transact(opts, "addUser", id, pubKey, name, passwordEncoded)
}

func (_UserManagement *UserManagementTransactor) AsyncAddUser(handler func(*types.Receipt, error), opts *bind.TransactOpts, id string, pubKey string, name string, passwordEncoded string) (*types.Transaction, error) {
	return _UserManagement.contract.AsyncTransact(opts, handler, "addUser", id, pubKey, name, passwordEncoded)
}

// AddUser is a paid mutator transaction binding the contract method 0x01cda3ac.
//
// Solidity: function addUser(string id, string pubKey, string name, string passwordEncoded) returns(bool)
func (_UserManagement *UserManagementSession) AddUser(id string, pubKey string, name string, passwordEncoded string) (*types.Transaction, *types.Receipt, error) {
	return _UserManagement.Contract.AddUser(&_UserManagement.TransactOpts, id, pubKey, name, passwordEncoded)
}

func (_UserManagement *UserManagementSession) AsyncAddUser(handler func(*types.Receipt, error), id string, pubKey string, name string, passwordEncoded string) (*types.Transaction, error) {
	return _UserManagement.Contract.AsyncAddUser(handler, &_UserManagement.TransactOpts, id, pubKey, name, passwordEncoded)
}

// AddUser is a paid mutator transaction binding the contract method 0x01cda3ac.
//
// Solidity: function addUser(string id, string pubKey, string name, string passwordEncoded) returns(bool)
func (_UserManagement *UserManagementTransactorSession) AddUser(id string, pubKey string, name string, passwordEncoded string) (*types.Transaction, *types.Receipt, error) {
	return _UserManagement.Contract.AddUser(&_UserManagement.TransactOpts, id, pubKey, name, passwordEncoded)
}

func (_UserManagement *UserManagementTransactorSession) AsyncAddUser(handler func(*types.Receipt, error), id string, pubKey string, name string, passwordEncoded string) (*types.Transaction, error) {
	return _UserManagement.Contract.AsyncAddUser(handler, &_UserManagement.TransactOpts, id, pubKey, name, passwordEncoded)
}

// ChangePasswordEncoded is a paid mutator transaction binding the contract method 0x6aca0640.
//
// Solidity: function changePasswordEncoded(string id, string targetPasswordEncoded) returns(bool)
func (_UserManagement *UserManagementTransactor) ChangePasswordEncoded(opts *bind.TransactOpts, id string, targetPasswordEncoded string) (*types.Transaction, *types.Receipt, error) {
	return _UserManagement.contract.Transact(opts, "changePasswordEncoded", id, targetPasswordEncoded)
}

func (_UserManagement *UserManagementTransactor) AsyncChangePasswordEncoded(handler func(*types.Receipt, error), opts *bind.TransactOpts, id string, targetPasswordEncoded string) (*types.Transaction, error) {
	return _UserManagement.contract.AsyncTransact(opts, handler, "changePasswordEncoded", id, targetPasswordEncoded)
}

// ChangePasswordEncoded is a paid mutator transaction binding the contract method 0x6aca0640.
//
// Solidity: function changePasswordEncoded(string id, string targetPasswordEncoded) returns(bool)
func (_UserManagement *UserManagementSession) ChangePasswordEncoded(id string, targetPasswordEncoded string) (*types.Transaction, *types.Receipt, error) {
	return _UserManagement.Contract.ChangePasswordEncoded(&_UserManagement.TransactOpts, id, targetPasswordEncoded)
}

func (_UserManagement *UserManagementSession) AsyncChangePasswordEncoded(handler func(*types.Receipt, error), id string, targetPasswordEncoded string) (*types.Transaction, error) {
	return _UserManagement.Contract.AsyncChangePasswordEncoded(handler, &_UserManagement.TransactOpts, id, targetPasswordEncoded)
}

// ChangePasswordEncoded is a paid mutator transaction binding the contract method 0x6aca0640.
//
// Solidity: function changePasswordEncoded(string id, string targetPasswordEncoded) returns(bool)
func (_UserManagement *UserManagementTransactorSession) ChangePasswordEncoded(id string, targetPasswordEncoded string) (*types.Transaction, *types.Receipt, error) {
	return _UserManagement.Contract.ChangePasswordEncoded(&_UserManagement.TransactOpts, id, targetPasswordEncoded)
}

func (_UserManagement *UserManagementTransactorSession) AsyncChangePasswordEncoded(handler func(*types.Receipt, error), id string, targetPasswordEncoded string) (*types.Transaction, error) {
	return _UserManagement.Contract.AsyncChangePasswordEncoded(handler, &_UserManagement.TransactOpts, id, targetPasswordEncoded)
}

// DeleteUser is a paid mutator transaction binding the contract method 0xd3695161.
//
// Solidity: function deleteUser(string id) returns()
func (_UserManagement *UserManagementTransactor) DeleteUser(opts *bind.TransactOpts, id string) (*types.Transaction, *types.Receipt, error) {
	return _UserManagement.contract.Transact(opts, "deleteUser", id)
}

func (_UserManagement *UserManagementTransactor) AsyncDeleteUser(handler func(*types.Receipt, error), opts *bind.TransactOpts, id string) (*types.Transaction, error) {
	return _UserManagement.contract.AsyncTransact(opts, handler, "deleteUser", id)
}

// DeleteUser is a paid mutator transaction binding the contract method 0xd3695161.
//
// Solidity: function deleteUser(string id) returns()
func (_UserManagement *UserManagementSession) DeleteUser(id string) (*types.Transaction, *types.Receipt, error) {
	return _UserManagement.Contract.DeleteUser(&_UserManagement.TransactOpts, id)
}

func (_UserManagement *UserManagementSession) AsyncDeleteUser(handler func(*types.Receipt, error), id string) (*types.Transaction, error) {
	return _UserManagement.Contract.AsyncDeleteUser(handler, &_UserManagement.TransactOpts, id)
}

// DeleteUser is a paid mutator transaction binding the contract method 0xd3695161.
//
// Solidity: function deleteUser(string id) returns()
func (_UserManagement *UserManagementTransactorSession) DeleteUser(id string) (*types.Transaction, *types.Receipt, error) {
	return _UserManagement.Contract.DeleteUser(&_UserManagement.TransactOpts, id)
}

func (_UserManagement *UserManagementTransactorSession) AsyncDeleteUser(handler func(*types.Receipt, error), id string) (*types.Transaction, error) {
	return _UserManagement.Contract.AsyncDeleteUser(handler, &_UserManagement.TransactOpts, id)
}

// Transfer is a paid mutator transaction binding the contract method 0x9b80b050.
//
// Solidity: function transfer(string from, string to, uint256 amount) returns(bool)
func (_UserManagement *UserManagementTransactor) Transfer(opts *bind.TransactOpts, from string, to string, amount *big.Int) (*types.Transaction, *types.Receipt, error) {
	return _UserManagement.contract.Transact(opts, "transfer", from, to, amount)
}

func (_UserManagement *UserManagementTransactor) AsyncTransfer(handler func(*types.Receipt, error), opts *bind.TransactOpts, from string, to string, amount *big.Int) (*types.Transaction, error) {
	return _UserManagement.contract.AsyncTransact(opts, handler, "transfer", from, to, amount)
}

// Transfer is a paid mutator transaction binding the contract method 0x9b80b050.
//
// Solidity: function transfer(string from, string to, uint256 amount) returns(bool)
func (_UserManagement *UserManagementSession) Transfer(from string, to string, amount *big.Int) (*types.Transaction, *types.Receipt, error) {
	return _UserManagement.Contract.Transfer(&_UserManagement.TransactOpts, from, to, amount)
}

func (_UserManagement *UserManagementSession) AsyncTransfer(handler func(*types.Receipt, error), from string, to string, amount *big.Int) (*types.Transaction, error) {
	return _UserManagement.Contract.AsyncTransfer(handler, &_UserManagement.TransactOpts, from, to, amount)
}

// Transfer is a paid mutator transaction binding the contract method 0x9b80b050.
//
// Solidity: function transfer(string from, string to, uint256 amount) returns(bool)
func (_UserManagement *UserManagementTransactorSession) Transfer(from string, to string, amount *big.Int) (*types.Transaction, *types.Receipt, error) {
	return _UserManagement.Contract.Transfer(&_UserManagement.TransactOpts, from, to, amount)
}

func (_UserManagement *UserManagementTransactorSession) AsyncTransfer(handler func(*types.Receipt, error), from string, to string, amount *big.Int) (*types.Transaction, error) {
	return _UserManagement.Contract.AsyncTransfer(handler, &_UserManagement.TransactOpts, from, to, amount)
}

// UserManagementTransferIterator is returned from FilterTransfer and is used to iterate over the raw logs and unpacked data for Transfer events raised by the UserManagement contract.
type UserManagementTransferIterator struct {
	Event *UserManagementTransfer // Event containing the contract specifics and raw log

	contract *bind.BoundContract // Generic contract to use for unpacking event data
	event    string              // Event name to use for unpacking event data

	logs chan types.Log        // Log channel receiving the found contract events
	sub  ethereum.Subscription // Subscription for errors, completion and termination
	done bool                  // Whether the subscription completed delivering logs
	fail error                 // Occurred error to stop iteration
}

// Next advances the iterator to the subsequent event, returning whether there
// are any more events found. In case of a retrieval or parsing error, false is
// returned and Error() can be queried for the exact failure.
func (it *UserManagementTransferIterator) Next() bool {
	// If the iterator failed, stop iterating
	if it.fail != nil {
		return false
	}
	// If the iterator completed, deliver directly whatever's available
	if it.done {
		select {
		case log := <-it.logs:
			it.Event = new(UserManagementTransfer)
			if err := it.contract.UnpackLog(it.Event, it.event, log); err != nil {
				it.fail = err
				return false
			}
			it.Event.Raw = log
			return true

		default:
			return false
		}
	}
	// Iterator still in progress, wait for either a data or an error event
	select {
	case log := <-it.logs:
		it.Event = new(UserManagementTransfer)
		if err := it.contract.UnpackLog(it.Event, it.event, log); err != nil {
			it.fail = err
			return false
		}
		it.Event.Raw = log
		return true

	case err := <-it.sub.Err():
		it.done = true
		it.fail = err
		return it.Next()
	}
}

// Error returns any retrieval or parsing error occurred during filtering.
func (it *UserManagementTransferIterator) Error() error {
	return it.fail
}

// Close terminates the iteration process, releasing any pending underlying
// resources.
func (it *UserManagementTransferIterator) Close() error {
	it.sub.Unsubscribe()
	return nil
}

// UserManagementTransfer represents a Transfer event raised by the UserManagement contract.
type UserManagementTransfer struct {
	From   string
	To     string
	Amount *big.Int
	Raw    types.Log // Blockchain specific contextual infos
}

// FilterTransfer is a free log retrieval operation binding the contract event 0x5358be4df107be4d9b023fc323f41d7109610225c6ef211b9d375b9fbd7ccc4f.
//
// Solidity: event Transfer(string from, string to, uint256 amount)
func (_UserManagement *UserManagementFilterer) FilterTransfer(opts *bind.FilterOpts) (*UserManagementTransferIterator, error) {

	logs, sub, err := _UserManagement.contract.FilterLogs(opts, "Transfer")
	if err != nil {
		return nil, err
	}
	return &UserManagementTransferIterator{contract: _UserManagement.contract, event: "Transfer", logs: logs, sub: sub}, nil
}

// WatchTransfer is a free log subscription operation binding the contract event 0x5358be4df107be4d9b023fc323f41d7109610225c6ef211b9d375b9fbd7ccc4f.
//
// Solidity: event Transfer(string from, string to, uint256 amount)
func (_UserManagement *UserManagementFilterer) WatchTransfer(opts *bind.WatchOpts, sink chan<- *UserManagementTransfer) (event.Subscription, error) {

	logs, sub, err := _UserManagement.contract.WatchLogs(opts, "Transfer")
	if err != nil {
		return nil, err
	}
	return event.NewSubscription(func(quit <-chan struct{}) error {
		defer sub.Unsubscribe()
		for {
			select {
			case log := <-logs:
				// New log arrived, parse the event and forward to the user
				event := new(UserManagementTransfer)
				if err := _UserManagement.contract.UnpackLog(event, "Transfer", log); err != nil {
					return err
				}
				event.Raw = log

				select {
				case sink <- event:
				case err := <-sub.Err():
					return err
				case <-quit:
					return nil
				}
			case err := <-sub.Err():
				return err
			case <-quit:
				return nil
			}
		}
	}), nil
}

// ParseTransfer is a log parse operation binding the contract event 0x5358be4df107be4d9b023fc323f41d7109610225c6ef211b9d375b9fbd7ccc4f.
//
// Solidity: event Transfer(string from, string to, uint256 amount)
func (_UserManagement *UserManagementFilterer) ParseTransfer(log types.Log) (*UserManagementTransfer, error) {
	event := new(UserManagementTransfer)
	if err := _UserManagement.contract.UnpackLog(event, "Transfer", log); err != nil {
		return nil, err
	}
	return event, nil
}
